&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

    // Объявление переменных в начале процедуры
    Перем СсылкаНаРодителя; // Используем Перем, раз уж начали

    ТекущийОбъект.Дата = ТекущаяДата();

    // Обработка файла (если используется)
    // ... (код для файла, если нужен) ...

    // Проверка на повторную обработку (если используется флаг ЗаписьДобавлена)
    // Если ТекущийОбъект.ЗаписьДобавлена Тогда
    //     Сообщить("Данные из этого документа уже были добавлены в справочники.");
    //     // Отказ = Истина;
    //     Возврат;
    // КонецЕсли;

    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаТЧ Из ТекущийОбъект.Ученики Цикл

            // Проверяем, заполнено ли ФИО ученика
            Если НЕ ЗначениеЗаполнено(СтрокаТЧ.УченикФИО) Тогда
                ВызватьИсключение "Не заполнено ФИО ученика в строке " + СтрокаТЧ.НомерСтроки + ".";
            КонецЕсли;

            // --- Шаг 1: Создание и запись Родителя ---
            СсылкаНаРодителя = Неопределено; // Сбрасываем перед каждой итерацией

            Если НЕ ЗначениеЗаполнено(СтрокаТЧ.РодительФИО) Тогда
                 ВызватьИсключение "Не заполнено ФИО родителя для ученика '" + СтрокаТЧ.УченикФИО + "' в строке " + СтрокаТЧ.НомерСтроки + ". Заполнение родителя обязательно.";
            КонецЕсли;

            НовыйРодитель = Справочники.Родители.СоздатьЭлемент();
            НовыйРодитель.Наименование = СокрЛП(СтрокаТЧ.РодительФИО);
            НовыйРодитель.НомерТелефона = СтрокаТЧ.НомерТелефона;

            НовыйРодитель.Записать();
            СсылкаНаРодителя = НовыйРодитель.Ссылка;

            // --- Шаг 2: Создание и запись Ученика ---
            НовыйУченик = Справочники.Ученики.СоздатьЭлемент();
            НовыйУченик.Наименование = СокрЛП(СтрокаТЧ.УченикФИО);
            НовыйУченик.Класс = ТекущийОбъект.Класс;

            // Устанавливаем ссылку на созданного родителя
            // Убедись, что реквизит в справочнике Ученики называется именно "Родитель"
            НовыйУченик.Владелец = СсылкаНаРодителя;
            // Заполняем другие реквизиты ученика, если они есть
            // ...

            НовыйУченик.Записать(); // Записываем ученика

            // --- Шаг 3: Обновление Владельца у Родителя (если Родители подчинены Ученикам) ---
            // Если в структуре справочника "Родители" поле "Владелец" имеет тип "СправочникСсылка.Ученики",
            // то нужно обновить родителя, установив ему владельца - только что созданного ученика.
            // Если такой связи нет, этот блок не нужен.
            // Раскомментируй, если Родители подчинены Ученикам:
            //
            // ОбъектРодителя = СсылкаНаРодителя.ПолучитьОбъект();
            // ОбъектРодителя.Владелец = НовыйУченик.Ссылка; // Устанавливаем владельца
            // ОбъектРодителя.Записать(); // Перезаписываем родителя с установленным владельцем
            //

        КонецЦикла; // Конец перебора строк ТЧ

        // Установка флага успешной обработки (если используется)
        // ТекущийОбъект.ЗаписьДобавлена = Истина;

        ЗафиксироватьТранзакцию(); // Все успешно, сохраняем изменения

    Исключение // Этот блок должен быть внутри процедуры и после Попытка
        ОтменитьТранзакцию(); // Откатываем все изменения при ошибке
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Произошла ошибка при добавлении учеников и родителей: " + ОписаниеОшибки();
        Сообщение.Сообщить();
        Отказ = Истина; // Запрещаем запись документа
    КонецПопытки; // Завершаем блок Попытка

КонецПроцедуры // ПередЗаписьюНаСервере                

//Файлы
&НаКлиенте
Процедура Загрузить(Команда)   
	Диалог = новый ПараметрыДиалогаПомещенияФайлов("Выберите файл для загрузки");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияДиалога", ЭтаФорма);
	НачатьПомещениеФайлаНаСервер(Оповещение,,,, Диалог, УникальныйИдентификатор);   
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалога(ОписаниеФайла, ДопПараметры) Экспорт      
	Попытка
	Если ОписаниеФайла.ПомещениеФайлаОтменено Тогда
		Возврат;
	КонецЕсли; 
	
	АдресВХранилище = ОписаниеФайла.Адрес;
	Объект.ИмяФайла = ОписаниеФайла.СсылкаНаФайл.Файл.Имя;
	
	Модифицированность = Истина;
	Исключение        
	    Предупреждение("Форма выбора файла была закрыта. Файл не выбран.");
	КонецПопытки;
КонецПроцедуры 

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		УдалитьИзВременногоХранилища(АдресВХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Скачать(Команда)
	Попытка
		СсылкаНаФайлВИБ = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Файл");
		ПолучитьФайл(СсылкаНаФайлВИБ,Объект.ИмяФайла);
	Исключение
		Предупреждение("Перед тем как скачивать файл, его нужно загрузить! Если же вы попытались открыть или скачать только что загруженый файл, то его перед этим нужно сохранить, нажав кнопку 'Провести и закрыть'.");
	КонецПопытки;
КонецПроцедуры                         

       

