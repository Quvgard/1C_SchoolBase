&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

    // Устанавливаем дату документа текущей (если не установлена вручную)
    Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Дата) Тогда
        ТекущийОбъект.Дата = ТекущаяДата();
    КонецЕсли;

    // Используем транзакцию для атомарности операции
    НачатьТранзакцию();
    Попытка
        // Проходим по всем ученикам в табличной части документа
        Для Каждого СтрокаТЧ Из ТекущийОбъект.Ученики Цикл
            // Получаем объект ученика для изменения
            ОбъектУченика = СтрокаТЧ.Ученик.ПолучитьОбъект();

            // Устанавливаем пометку об отчислении
            ОбъектУченика.ПометкаОбОтчислении = Истина;

            // Очищаем класс ученика
            // Важно: Проверь тип реквизита "Класс" в справочнике "Ученики".
            // Если это СправочникСсылка, используй ПустаяСсылка(). Если допускает Неопределено, можно оставить Неопределено.
            // Предполагаем, что Класс - это ссылка на справочник Классы.
            Если ТипЗнч(ОбъектУченика.Класс) = Тип("СправочникСсылка.Классы") Тогда // Замени Классы на имя твоего справочника классов
                 ОбъектУченика.Класс = Справочники.Классы.ПустаяСсылка(); // Замени Классы на имя твоего справочника классов
            Иначе
                 // Если тип другой или допускает Неопределено
                 ОбъектУченика.Класс = Неопределено;
            КонецЕсли;


            // Записываем изменения в объект ученика
            ОбъектУченика.Записать();
        КонецЦикла;

        // Если все прошло успешно, фиксируем транзакцию
        ЗафиксироватьТранзакцию();

    Исключение
        // Если произошла ошибка, отменяем транзакцию
        ОтменитьТранзакцию();
        // Сообщаем об ошибке
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Произошла ошибка при отчислении учеников: " + ОписаниеОшибки();
        Сообщение.Сообщить();
        // Отказываемся от записи документа
        Отказ = Истина;
    КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    // Если документ новый, можно установить текущую дату по умолчанию
    Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
        Объект.Дата = ТекущаяДата();
    КонецЕсли;
КонецПроцедуры

//Файлы
&НаКлиенте
Процедура Загрузить(Команда)   
	Диалог = новый ПараметрыДиалогаПомещенияФайлов("Выберите файл для загрузки");
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияДиалога", ЭтаФорма);
	НачатьПомещениеФайлаНаСервер(Оповещение,,,, Диалог, УникальныйИдентификатор);   
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияДиалога(ОписаниеФайла, ДопПараметры) Экспорт      
	Попытка
	Если ОписаниеФайла.ПомещениеФайлаОтменено Тогда
		Возврат;
	КонецЕсли; 
	
	АдресВХранилище = ОписаниеФайла.Адрес;
	Объект.ИмяФайла = ОписаниеФайла.СсылкаНаФайл.Файл.Имя;
	
	Модифицированность = Истина;
	Исключение        
	    Предупреждение("Форма выбора файла была закрыта. Файл не выбран.");
	КонецПопытки;
КонецПроцедуры 

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		УдалитьИзВременногоХранилища(АдресВХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Скачать(Команда)
	Попытка
		СсылкаНаФайлВИБ = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Файл");
		ПолучитьФайл(СсылкаНаФайлВИБ,Объект.ИмяФайла);
	Исключение
		Предупреждение("Перед тем как скачивать файл, его нужно загрузить! Если же вы попытались открыть или скачать только что загруженый файл, то его перед этим нужно сохранить, нажав кнопку 'Провести и закрыть'.");
	КонецПопытки;
КонецПроцедуры                         

       

